# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/isaacai',
                'doc_host': 'https://Isaac-Flath.github.io',
                'git_url': 'https://github.com/Isaac-Flath/isaacai',
                'lib_path': 'isaacai'},
  'syms': { 'isaacai.dataloaders': { 'isaacai.dataloaders.DataLoaders': ('dataloaders.html#dataloaders', 'isaacai/dataloaders.py'),
                                     'isaacai.dataloaders.DataLoaders.__init__': ( 'dataloaders.html#dataloaders.__init__',
                                                                                   'isaacai/dataloaders.py'),
                                     'isaacai.dataloaders.DataLoaders.from_dataset_dict': ( 'dataloaders.html#dataloaders.from_dataset_dict',
                                                                                            'isaacai/dataloaders.py'),
                                     'isaacai.dataloaders.DataLoaders.show_batch': ( 'dataloaders.html#dataloaders.show_batch',
                                                                                     'isaacai/dataloaders.py'),
                                     'isaacai.dataloaders.collate_dataset_dict': ( 'dataloaders.html#collate_dataset_dict',
                                                                                   'isaacai/dataloaders.py'),
                                     'isaacai.dataloaders.get_dataloaders': ('dataloaders.html#get_dataloaders', 'isaacai/dataloaders.py'),
                                     'isaacai.dataloaders.sample_dataset_dict': ( 'dataloaders.html#sample_dataset_dict',
                                                                                  'isaacai/dataloaders.py')},
            'isaacai.models': { 'isaacai.models.SimpleNet': ('models.html#simplenet', 'isaacai/models.py'),
                                'isaacai.models.SimpleNet.__init__': ('models.html#simplenet.__init__', 'isaacai/models.py'),
                                'isaacai.models.SimpleNet.forward': ('models.html#simplenet.forward', 'isaacai/models.py')},
            'isaacai.training': { 'isaacai.training.DeviceCB': ('training.html#devicecb', 'isaacai/training.py'),
                                  'isaacai.training.DeviceCB.__init__': ('training.html#devicecb.__init__', 'isaacai/training.py'),
                                  'isaacai.training.DeviceCB.before_batch': ('training.html#devicecb.before_batch', 'isaacai/training.py'),
                                  'isaacai.training.DeviceCB.before_fit': ('training.html#devicecb.before_fit', 'isaacai/training.py'),
                                  'isaacai.training.ProgressCB': ('training.html#progresscb', 'isaacai/training.py'),
                                  'isaacai.training.ProgressCB.__init__': ('training.html#progresscb.__init__', 'isaacai/training.py'),
                                  'isaacai.training.ProgressCB.after_batch': ( 'training.html#progresscb.after_batch',
                                                                               'isaacai/training.py'),
                                  'isaacai.training.ProgressCB.after_epoch': ( 'training.html#progresscb.after_epoch',
                                                                               'isaacai/training.py'),
                                  'isaacai.training.ProgressCB.before_batch': ( 'training.html#progresscb.before_batch',
                                                                                'isaacai/training.py'),
                                  'isaacai.training.ProgressCB.before_epoch': ( 'training.html#progresscb.before_epoch',
                                                                                'isaacai/training.py'),
                                  'isaacai.training.ProgressCB.log': ('training.html#progresscb.log', 'isaacai/training.py'),
                                  'isaacai.training.Trainer': ('training.html#trainer', 'isaacai/training.py'),
                                  'isaacai.training.Trainer.__init__': ('training.html#trainer.__init__', 'isaacai/training.py'),
                                  'isaacai.training.Trainer.fit': ('training.html#trainer.fit', 'isaacai/training.py'),
                                  'isaacai.training.Trainer.one_batch': ('training.html#trainer.one_batch', 'isaacai/training.py'),
                                  'isaacai.training.Trainer.one_epoch': ('training.html#trainer.one_epoch', 'isaacai/training.py'),
                                  'isaacai.training.Trainer.run_callbacks': ('training.html#trainer.run_callbacks', 'isaacai/training.py'),
                                  'isaacai.training.Trainer.training': ('training.html#trainer.training', 'isaacai/training.py'),
                                  'isaacai.training.run_callbacks': ('training.html#run_callbacks', 'isaacai/training.py')},
            'isaacai.utils': { 'isaacai.utils.clean_ipython_hist': ('utils.html#clean_ipython_hist', 'isaacai/utils.py'),
                               'isaacai.utils.clean_mem': ('utils.html#clean_mem', 'isaacai/utils.py'),
                               'isaacai.utils.clean_traceback': ('utils.html#clean_traceback', 'isaacai/utils.py'),
                               'isaacai.utils.get_grid': ('utils.html#get_grid', 'isaacai/utils.py'),
                               'isaacai.utils.inplace': ('utils.html#inplace', 'isaacai/utils.py'),
                               'isaacai.utils.mask2idxs': ('utils.html#mask2idxs', 'isaacai/utils.py'),
                               'isaacai.utils.set_seed': ('utils.html#set_seed', 'isaacai/utils.py'),
                               'isaacai.utils.show_image': ('utils.html#show_image', 'isaacai/utils.py'),
                               'isaacai.utils.subplots': ('utils.html#subplots', 'isaacai/utils.py'),
                               'isaacai.utils.to_cpu': ('utils.html#to_cpu', 'isaacai/utils.py'),
                               'isaacai.utils.to_device': ('utils.html#to_device', 'isaacai/utils.py')},
            'isaacai.visualizations': {}}}
