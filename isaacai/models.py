# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/20_models.ipynb.

# %% auto 0
__all__ = ['SimpleNet']

# %% ../nbs/20_models.ipynb 4
from .utils import *
from .dataloaders import *

import matplotlib.pyplot as plt,matplotlib as mpl
import torchvision.transforms.functional as TF,torch.nn.functional as F
import fastcore.all as fc
import torch
from torch import nn, Tensor
from datasets import load_dataset, Dataset
from torch.utils.data import DataLoader
import pandas as pd, numpy as np

# %% ../nbs/20_models.ipynb 7
class SimpleNet(nn.Module):
    ## simplified from Pytorch Tutorial
    def __init__(self,n_inp,n_hidden,n_out):
        super().__init__()
        self.flatten = nn.Flatten()
        self.linear_relu_stack = nn.Sequential(
            nn.Linear(n_inp, n_hidden),
            nn.ReLU(),
            nn.Linear(n_hidden, n_out)
        )

    def forward(self, x):
        x = self.flatten(x)
        logits = self.linear_relu_stack(x)
        return logits
